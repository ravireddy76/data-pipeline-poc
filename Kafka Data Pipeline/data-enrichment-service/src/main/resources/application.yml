project:
  artifactId: data-enrichment-service
  name: data-enrichment-service
  version: 1.0.0
  description: Data Enrichment service is a micro service to read and validate/format the data.


# Exposing all the actuator end points (Spring 2.0) #
management:
  endpoints:
    web:
      exposure:
        include:
          '*'

  # Exposing the restart & shutdown endpoint
  endpoint:
    restart:
      enabled: true
    shutdown:
      enabled: true

# For Spring Actuator /info endpoint
info:
  artifact: ${project.artifactId}
  name: ${project.name}
  description: ${project.description}
  version: ${project.version}

# Spring
spring:
  application:
    name: data-enrichment-service

  #Postgres dB configuration.
  datasource:
    platform: postgres
    url: jdbc:postgresql://${dbinfo.host}:${dbinfo.port}/${dbinfo.dbname}
    username: kafkauser
    password: 6p9jawbYEVsD5WnS
    driver-class-name: org.postgresql.Driver

  #JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
      show-sql: true
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        default_schema: pacs_live
        dialect: org.hibernate.dialect.PostgreSQLDialect


  # Kafka Configuration
  kafka:
    bootstrap-servers: DC1-T-KAFKA1.ad.cdirad.com:9092
    consumer:
      group-id: data_orders
      auto-offset-reset: earliest

# Kafka topic configuration where listening from topic
topic:
  order: orders
  cdc: cdcdata
  t_alerts: alerts

dbinfo:
  host: 10.139.0.51
  port: 5432
  dbname: pacs_live
  offsetfile: /cdc/pg-debezium-data.dat

#host: 10.1.15.197
#C:/Tools/Debezium-Data/pg-debezium-data.dat

cdcevent:
  tables: public\.(ad|al|app|body|co|cpt|cr|fac|fee|icd|ins|mod|mon|ne|orders|pat|sch|study_f|ta|tran).*
  #public.facilities
  #public\.(ad|al|app|body|co|cpt|cr|fac|fee|icd|ins|mod|mon|ne|orders|pat|sch|study_f|ta|tran).*
  # public\.(ad|ae|al|api|app|au|bo|call|cl|cms|co|cpt|cr|cu|dicom|el|em|en|ex|fac|fee|fil|hie|hl7|hp|icd|imm|ins|iss|lab|mar|matt|mer|mo|ne|no|op|order|out|ow|pacs|pat|peer|ph|pla|pos|pp|pro|que|rco|re|ro|rx|sch|sec|si|sr|sta|stu|sub|ta|temp|third|tran|user|vac|veh|vital|zip).*


# use a HTTP port 8080
server:
  port: 8085


---
spring:
  profiles: stage

server:
  port: 8080


---
spring:
  profiles: prod

server:
  port: 8080



